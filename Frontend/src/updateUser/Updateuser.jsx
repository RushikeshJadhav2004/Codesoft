import React, { useState, useEffect } from "react";
import { Link, useParams, useNavigate } from "react-router-dom";
import { ArrowLeft } from "lucide-react";
import { toast, ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

const Updateuser = () => {
  const { id } = useParams();
  const navigate = useNavigate();

  const [formData, setFormData] = useState({
    name: "",
    email: "",
    age: "",
    password: "",
  });

 
  useEffect(() => {
    const fetchUser = async () => {
      try {
        const res = await fetch(`http://localhost:2000/api/user/${id}`);
        const data = await res.json();

        setFormData({
          name: data.name,
          email: data.email,
          age: data.age,
          password: data.password,
        });
      } catch (err) {
        console.error("Error loading user:", err);
        toast.error("Failed to load user info.");
      }
    };

    fetchUser();
  }, [id]);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value,
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      const response = await fetch(`http://localhost:2000/api/user/${id}`, {
        method: "PUT",
        headers: {
          "Content-Type": "application/json", 
        },
        body: JSON.stringify(formData),
      });

      if (response.ok) {
        toast.success("✅ User updated successfully!", {
          position: "top-right",
          autoClose: 3000,
        });

        setTimeout(() => {
          navigate("/User");
        }, 2000);
      } else {
        toast.error("❌ Failed to update user.");
      }
    } catch (error) {
      console.error("❌ Network error:", error);
      toast.error("🚨 Something went wrong.");
    }
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900 p-6">
      <form
        onSubmit={handleSubmit}
        className="bg-white/10 backdrop-blur-md text-white p-8 rounded-2xl shadow-2xl w-full max-w-md border border-white/20"
      >
        <Link
          to="/User"
          className="inline-flex items-center gap-1 text-sm px-3 py-1 rounded-md bg-gradient-to-r from-indigo-500 to-purple-600 text-white font-medium shadow hover:from-indigo-600 hover:to-purple-700 hover:scale-105 transition-all duration-300 mb-4"
        >
          <ArrowLeft size={12} className="mt-[1px]" />
          Back to Users
        </Link>

        <h2 className="text-3xl font-bold mb-6 text-center">✏️ Update User</h2>

        <div className="mb-4">
          <label className="block mb-1 text-sm font-medium">Name</label>
          <input
            type="text"
            name="name"
            value={formData.name}
            onChange={handleChange}
            className="w-full px-4 py-2 rounded-lg bg-white/20 border border-white/20 text-white"
            required
          />
        </div>

        <div className="mb-4">
          <label className="block mb-1 text-sm font-medium">Email</label>
          <input
            type="email"
            name="email"
            value={formData.email}
            onChange={handleChange}
            className="w-full px-4 py-2 rounded-lg bg-white/20 border border-white/20 text-white"
            required
          />
        </div>

        <div className="mb-4">
          <label className="block mb-1 text-sm font-medium">Age</label>
          <input
            type="number"
            name="age"
            value={formData.age}
            onChange={handleChange}
            className="w-full px-4 py-2 rounded-lg bg-white/20 border border-white/20 text-white"
            required
          />
        </div>

        <div className="mb-6">
          <label className="block mb-1 text-sm font-medium">Password</label>
          <input
            type="password"
            name="password"
            value={formData.password}
            onChange={handleChange}
            className="w-full px-4 py-2 rounded-lg bg-white/20 border border-white/20 text-white"
            required
          />
        </div>

        <button
          type="submit"
          className="w-full py-2 bg-gradient-to-r from-yellow-400 to-yellow-600 hover:from-yellow-500 hover:to-yellow-700 rounded-lg text-white font-semibold shadow-md hover:scale-105 transition duration-300"
        >
          ✏️ Update User
        </button>
      </form>

      <ToastContainer />
    </div>
  );
};

export default Updateuser;
